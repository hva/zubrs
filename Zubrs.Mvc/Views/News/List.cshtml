@using Zubrs.Mvc.Helpers
@using Zubrs.Mvc.Infrastructure
@model PaginatedList<Zubrs.Models.Article>

<div class="small-12 columns">
    <h1>Новости</h1>

    @for (int i = 0; i < Model.Count; i++)
    {
        var x = Model[i];
        var link = Url.RouteUrl(RouteName.NewsItem, new {id = x.Id});

        <div class="row">
            @if (x.HasImage)
            {
                <div class="small-2 columns">
                    <a class="th" href="@link"><img src="@x.ImageUrl"></a>
                </div>
                <div class="small-10 columns">
                    <h5><a href="@link">@x.Title</a></h5>
                    @Html.Markdown(x.PreText)
                </div>
            }
            else
            {
                <div class="small-12 columns">
                    <h5><a href="@link">@x.Title</a></h5>
                    @Html.Markdown(x.PreText)
                </div>
            }
        </div>
        if (i < Model.Count - 1)
        {
            <hr />
        }
    }
    
@if (Model.TotalPages > 1)
{
    <div class="row">
        <div class="small-10 small-offset-2 columns">
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="arrow"><a href="@Url.RouteUrl(RouteName.NewsPage, new {page = Model.PageIndex - 1})">&laquo;</a></li>
                }
                @for (int i = 0; i < Model.TotalPages; i++)
                {
                    <li class="@(i == Model.PageIndex ? "current" : null)"><a href="@Url.RouteUrl(RouteName.NewsPage, new {page = i})">@(i + 1)</a></li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="arrow"><a href="@Url.RouteUrl(RouteName.NewsPage, new { page = Model.PageIndex + 1 })">&raquo;</a></li>
                }
            </ul>
        </div>
    </div>
}

</div>
